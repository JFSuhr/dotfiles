App Template

= Web development =

== Frontend ==

=== [[#Build an Auth Module]] ===


== Make a Backend ==






=== Build an Auth Module === 
- [ ] Completed
  - [ ] Create an auth module 
    - [ ] index.js
      - [ ] This file constructs the module and imports the dependencies
    - [ ] auth.config.js, auth.html
    - [ ] include auth.js in the entry file(app.js)
    - [ ] test html pages
    - [ ] create auth.controller.js and add to auth index
    - [ ]  







- [ ] Skeleton 
  - [ ] Give access by creating a location in the proxy server 
  - [ ] Create Structure
    - [ ] git, gitignore, robots.txt
    - [ ] npm init -y
      - [ ] express, cors, body-parser 
    - [ ] Server Folder
      - [ ] src
        - [ ] config.js, index.js
        - [ ] db/
          - [ ] controllers/
        - [ ] services/
      - [ ] dist
     
=== Use modern javascript ===
    - [ ] npm install --save-dev babel-cli babel-preset-es2015 nodemon
    - [ ] make a package.json script
    - [ ] create a .babelrc file and include presets
      - [ ] or just include in package.json
    - [ ] gitignore dist
    - [ ] create build and dev scripts in package json
  - [ ] Setup test endpoint

=== Contact Mailer api ===
  - [ ] npm i --save nodemailer 
  - [ ] create controller and endpoint
  - [ ] test in postman
  
=== Make a User ===
  - [ ] Create a database 
  - [ ] npm i --save mysql sequelize sequelize-cli 
  - [ ] sequelize init
    - [ ] change config data
  - [ ] create sequelizerc
  - [ ] create an npm script for migrations
  - [ ] use sequelize generator and create user model
  - [ ] run migrations

=== Login/Registration === 
  - [ ] npm i passport passport-local --save 
  - [ ] create a passport file
  - [ ] import and add policy, middleware to index.js
  - [ ] 
   
   
   
    
== Make the Frontend ==

- [ ] Completed
  - [ ] Directory Structure
    - [ ] public
    
=== livingstyle guide ===    
  - [ ] npm i --save livingcss 
  - [ ] build the livingscss.js file
  - [ ] build an npm script

=== Webpack ===
    - [ ] npm install webpack --save-dev 
    - [ ] create a config file that includes front and backends
    - [ ] create entry files for front and backends
    - [ ] install modules for babel
    - [ ] configure the webpack config for the modules
  
=== Angular Modules ===

  ==== Creatie a module ====
  - [X] create a folder for the module
  - [ ] create the template for the app 
  - [ ] create the routes for the module
  - [ ] create the controller for the module
  - [ ] create index.js for browserify 
  - [ ] include the index.js file into the source file for bundling
  
=== login/registration ===
  - [ ] Create login/register pages
  - [ ] Send login/register requests to our server & handle the response
  - [ ] Display errors
  - [ ] Store the user's auth info (JWT token) to ensure they stay logged in
  - [ ] Ensure users can/cannot access pages if they're logged in/out


