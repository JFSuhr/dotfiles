= React JS =

== Notes by Bucky Roberts ==

gotchas:
you need to have react preset to transpile jsx
you need to load react-dom to use the render method

== Displaying text with React: ==
* use reactdom render method
* put into a div using document getElementById method

var x = ReactDOM.render(<div>hi</div>, document.getElementById("test"));

== A simple React component: ==
* a react class
* you create a class and then use react-dom to use the component like an html element

var Bacon = React.createClass({

  render: function() {
    return <div>hello bacon boy</div>;
  }

});

var x = ReactDOM.render(<Bacon />, document.getElementById("test");

== React components can only have 1 single element ==
right:
var Bacon = React.createClass({

  render: function() {
    return <p>hello bacon boy</p><p>hello bacon girl<p>;
  }

});

wrong:
var Bacon = React.createClass({

  render: function() {
    return <div><p>hello bacon boy</p><p>hello bacon girl<p></div>;
  }

});

== ReactDOM render acts lik ReactClass in that it can only render 1 element at a time ==
wrong:
var x = ReactDOM(<Blah /><Blah /><Blah />, document.getElementById("test");

right:
var x = ReactDOM(<div>
              <Blah />
              <Blah />
              <Blah />
              </div>, document.getElementById("test");
              
              
== React Component Properties ==
* they are like attributes for html elements you put inside components
* use this and props to refer to the attribute

var x = React.createClass({
  render: function() {
    <div>
    <h1>{this.props.title}</h1>
    <h2>{this.props.genre}</h2>
    </div>
  }
});

var y = ReactDOM.render(<div>
  <Movie title="The Beast" genre="Horror" />
  <Movie title="The Baby" genre="Humor" />
  <Movie title="The Man" genre="Drama" />
  </div>, document.getElementById('test');


== Event Handling ==
              
              
              
